// This file is auto-generated by @hey-api/openapi-ts

/**
 * Adaptation
 */
export type Adaptation = {
    /**
     * Adaptation Cost
     */
    adaptation_cost: number;
    /**
     * Avoided Ead Amin
     */
    avoided_ead_amin: number;
    /**
     * Avoided Ead Mean
     */
    avoided_ead_mean: number;
    /**
     * Avoided Ead Amax
     */
    avoided_ead_amax: number;
    /**
     * Avoided Eael Amin
     */
    avoided_eael_amin: number;
    /**
     * Avoided Eael Mean
     */
    avoided_eael_mean: number;
    /**
     * Avoided Eael Amax
     */
    avoided_eael_amax: number;
    /**
     * Hazard
     */
    hazard: string;
    /**
     * Rcp
     */
    rcp: string;
    /**
     * Adaptation Name
     */
    adaptation_name: string;
    /**
     * Adaptation Protection Level
     */
    adaptation_protection_level: number;
};

/**
 * ExpectedDamage
 */
export type ExpectedDamage = {
    /**
     * Ead Amin
     */
    ead_amin: number;
    /**
     * Ead Mean
     */
    ead_mean: number;
    /**
     * Ead Amax
     */
    ead_amax: number;
    /**
     * Eael Amin
     */
    eael_amin: number;
    /**
     * Eael Mean
     */
    eael_mean: number;
    /**
     * Eael Amax
     */
    eael_amax: number;
    /**
     * Hazard
     */
    hazard: string;
    /**
     * Rcp
     */
    rcp: string;
    /**
     * Epoch
     */
    epoch: string | number;
    /**
     * Protection Standard
     */
    protection_standard: number;
};

/**
 * FeatureListItemOut[float]
 */
export type FeatureListItemOutFloat = {
    /**
     * Id
     */
    id: number;
    /**
     * String Id
     */
    string_id: string;
    /**
     * Layer
     */
    layer: string;
    /**
     * Bbox Wkt
     */
    bbox_wkt: string;
    /**
     * Value
     */
    value: number;
};

/**
 * FeatureOut
 */
export type FeatureOut = {
    /**
     * Id
     */
    id: number;
    /**
     * String Id
     */
    string_id: string;
    /**
     * Layer
     */
    layer: string;
    /**
     * Sublayer
     */
    sublayer?: string | null;
    /**
     * Properties
     */
    properties: {
        [key: string]: unknown;
    };
    /**
     * Damages Expected
     */
    damages_expected?: Array<ExpectedDamage>;
    /**
     * Damages Return Period
     */
    damages_return_period?: Array<ReturnPeriodDamage>;
    /**
     * Damages Npv
     */
    damages_npv?: Array<NpvDamage>;
    /**
     * Adaptation
     */
    adaptation?: Array<Adaptation>;
};

/**
 * HTTPValidationError
 */
export type HttpValidationError = {
    /**
     * Detail
     */
    detail?: Array<ValidationError>;
};

/**
 * NPVDamage
 */
export type NpvDamage = {
    /**
     * Ead Amin
     */
    ead_amin: number;
    /**
     * Ead Mean
     */
    ead_mean: number;
    /**
     * Ead Amax
     */
    ead_amax: number;
    /**
     * Eael Amin
     */
    eael_amin: number;
    /**
     * Eael Mean
     */
    eael_mean: number;
    /**
     * Eael Amax
     */
    eael_amax: number;
    /**
     * Hazard
     */
    hazard: string;
    /**
     * Rcp
     */
    rcp: string;
};

/**
 * Page[FeatureListItemOut[float]]
 */
export type PageFeatureListItemOutFloat = {
    /**
     * Items
     */
    items: Array<FeatureListItemOutFloat>;
    /**
     * Total
     */
    total: number | null;
    /**
     * Page
     */
    page: number | null;
    /**
     * Size
     */
    size: number | null;
    /**
     * Pages
     */
    pages?: number | null;
};

/**
 * ProtectedFeatureListItem
 */
export type ProtectedFeatureListItem = {
    /**
     * Id
     */
    id: number;
    /**
     * String Id
     */
    string_id: string;
    /**
     * Layer
     */
    layer: string;
    /**
     * Adaptation Name
     */
    adaptation_name: string;
    /**
     * Adaptation Protection Level
     */
    adaptation_protection_level: number;
    /**
     * Adaptation Cost
     */
    adaptation_cost: number;
    /**
     * Avoided Ead Mean
     */
    avoided_ead_mean: number;
    /**
     * Avoided Eael Mean
     */
    avoided_eael_mean: number;
    /**
     * Hazard
     */
    hazard: string;
    /**
     * Rcp
     */
    rcp: number;
};

/**
 * ReturnPeriodDamage
 */
export type ReturnPeriodDamage = {
    /**
     * Exposure
     */
    exposure: number;
    /**
     * Damage Amin
     */
    damage_amin: number;
    /**
     * Damage Mean
     */
    damage_mean: number;
    /**
     * Damage Amax
     */
    damage_amax: number;
    /**
     * Loss Amin
     */
    loss_amin: number;
    /**
     * Loss Mean
     */
    loss_mean: number;
    /**
     * Loss Amax
     */
    loss_amax: number;
    /**
     * Hazard
     */
    hazard: string;
    /**
     * Rcp
     */
    rcp: string;
    /**
     * Epoch
     */
    epoch: string | number;
    /**
     * Rp
     */
    rp: number;
};

/**
 * ValidationError
 */
export type ValidationError = {
    /**
     * Location
     */
    loc: Array<string | number>;
    /**
     * Message
     */
    msg: string;
    /**
     * Error Type
     */
    type: string;
};

export type FeaturesReadFeatureData = {
    body?: never;
    path: {
        /**
         * Feature Id
         */
        feature_id: number;
    };
    query?: never;
    url: '/features/{feature_id}';
};

export type FeaturesReadFeatureErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type FeaturesReadFeatureError = FeaturesReadFeatureErrors[keyof FeaturesReadFeatureErrors];

export type FeaturesReadFeatureResponses = {
    /**
     * Successful Response
     */
    200: FeatureOut;
};

export type FeaturesReadFeatureResponse = FeaturesReadFeatureResponses[keyof FeaturesReadFeatureResponses];

export type FeaturesReadSortedFeaturesData = {
    body?: never;
    path: {
        /**
         * Field Group
         */
        field_group: string;
    };
    query: {
        /**
         * Field
         */
        field: string;
        /**
         * Dimensions
         */
        dimensions: string;
        /**
         * Parameters
         */
        parameters: string;
        /**
         * Layer
         */
        layer?: string | null;
        /**
         * Sector
         */
        sector?: string | null;
        /**
         * Subsector
         */
        subsector?: string | null;
        /**
         * Asset Type
         */
        asset_type?: string | null;
        /**
         * Page
         */
        page?: number;
        /**
         * Size
         */
        size?: number;
    };
    url: '/features/sorted-by/{field_group}';
};

export type FeaturesReadSortedFeaturesErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type FeaturesReadSortedFeaturesError = FeaturesReadSortedFeaturesErrors[keyof FeaturesReadSortedFeaturesErrors];

export type FeaturesReadSortedFeaturesResponses = {
    /**
     * Successful Response
     */
    200: PageFeatureListItemOutFloat;
};

export type FeaturesReadSortedFeaturesResponse = FeaturesReadSortedFeaturesResponses[keyof FeaturesReadSortedFeaturesResponses];

export type FeaturesReadProtectedFeaturesData = {
    body?: never;
    path: {
        /**
         * Protector Id
         */
        protector_id: number;
    };
    query: {
        rcp: string;
    };
    url: '/features/{protector_id}/protected-by';
};

export type FeaturesReadProtectedFeaturesErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type FeaturesReadProtectedFeaturesError = FeaturesReadProtectedFeaturesErrors[keyof FeaturesReadProtectedFeaturesErrors];

export type FeaturesReadProtectedFeaturesResponses = {
    /**
     * Response Features-Read Protected Features
     * Successful Response
     */
    200: Array<ProtectedFeatureListItem>;
};

export type FeaturesReadProtectedFeaturesResponse = FeaturesReadProtectedFeaturesResponses[keyof FeaturesReadProtectedFeaturesResponses];

export type AttributesReadAttributesData = {
    /**
     * Ids
     */
    body: Array<number>;
    path: {
        /**
         * Field Group
         */
        field_group: string;
    };
    query: {
        /**
         * Layer
         */
        layer: string;
        /**
         * Field
         */
        field: string;
        /**
         * Dimensions
         */
        dimensions: string;
        /**
         * Parameters
         */
        parameters: string;
    };
    url: '/attributes/{field_group}';
};

export type AttributesReadAttributesErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type AttributesReadAttributesError = AttributesReadAttributesErrors[keyof AttributesReadAttributesErrors];

export type AttributesReadAttributesResponses = {
    /**
     * Response Attributes-Read Attributes
     * Successful Response
     */
    200: {
        [key: string]: unknown | null;
    };
};

export type AttributesReadAttributesResponse = AttributesReadAttributesResponses[keyof AttributesReadAttributesResponses];

export type ClientOptions = {
    baseUrl: 'http://localhost:8888' | (string & {});
};